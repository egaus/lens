# This is the configuration file for lens.  There is a separate
# config for logging following the standard python logging
# configuration dictionary format (https://www.python.org/dev/peps/pep-0391/)
# 

##################################################
# INPUT: Location of Suspicious Files to Process #
##################################################
[suspicious files]
# This is where suspicious files to be analyzed will be picked up and processed.
files = $LENS_HOME/samples/files
# This is where text files containing suspicious url's will be picked up and processed.
urls = $LENS_HOME/samples/urls
# This is where .pcaps will be picked up by lens and processed.
pcaps = $LENS_HOME/samples/pcaps

###################################
# STORAGE: Database Configuration #
###################################
[database]
# dbtype may be sqlite or mongo.
# Below is a sqlite config.  
# dbtype = sqlite
# sqlite_location = $LENS_HOME/lens.db

# To switch to MongoDB, comment out the lines above for sqlite and uncomment the lines below.
# dbtype = mongo
# dbhost = localhost
# dbport = 27017
# dbuser = <insert username>
# dbpw = <insert password>
dbtype = mongo
dbhost = localhost
dbport = 27017
dbuser = 
dbpw = 

# Store files in db.  This is set to no for sqlite databases.  If using mongodb, 
# user has the option to store samples in the database.  The benefit of storing samples
# is that they can be later retrieved and they can be re-processed if now analysis
# engines are later registered.  The downside is the storage cost.
save_files_to_db = no

###################
# FILE PROCESSING #
###################
[analysis engines]
# Analysis Engines
# analysis engines are registered here based on yara rules.  If the yara rule matches
# a file, then the corresponding python module is run across the file and results stored
# in mongodb.  
# NOTE: Adding your own modules is only supported with MongoDB instances, not sqlite.
# Format for registering is <yara rule name> = <module.py>
yara = $LENS_HOME/lens/yara
analyzers = $LENS_HOME/lens/analyzers

